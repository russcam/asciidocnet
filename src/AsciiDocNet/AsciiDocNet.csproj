<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <CurrentVersion>0.0.0-setfrombuild</CurrentVersion>
    <TargetFrameworks>net45;netstandard1.3</TargetFrameworks>
    <CurrentAssemblyVersion>0.0.0</CurrentAssemblyVersion>
    <CurrentAssemblyFileVersion>0.0.0.0</CurrentAssemblyFileVersion>
    <Version>$(CurrentVersion)</Version>
    <InformationalVersion>$(CurrentVersion)</InformationalVersion>
    <AssemblyVersion>$(CurrentAssemblyVersion)</AssemblyVersion>
    <FileVersion>$(CurrentAssemblyFileVersion)</FileVersion>
	<!-- 1591: don't warn about missing XML comments -->
	<NoWarn>1591</NoWarn>
	<NetStandardImplicitPackageVersion>1.6.0</NetStandardImplicitPackageVersion>
    <DoSourceLink>false</DoSourceLink>
    <DebugType Condition="'$(Configuration)'=='Debug'">full</DebugType>
    <SourceLink Condition="'$(DoSourceLink)'=='true'">$(BaseIntermediateOutputPath)\sl-$(MsBuildProjectName)-$(TargetFramework).json</SourceLink>
    <RepoUri>https://raw.githubusercontent.com/russcam/asciidocnet</RepoUri>
  </PropertyGroup>
  <PropertyGroup>
    <DocumentationFile>bin\$(Configuration)\AsciiDocNet.xml</DocumentationFile>
  </PropertyGroup>
  <ItemGroup Condition="'$(TargetFramework)'=='netstandard1.3'">
    <PackageReference Include="System.Collections.Specialized" Version="4.0.1" />
    <PackageReference Include="System.ComponentModel.Annotations" Version="4.1.0" />
    <PackageReference Include="System.Reflection.TypeExtensions" Version="4.1.0" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)'=='net45'">
    <Reference Include="System.ComponentModel.DataAnnotations" />
  </ItemGroup>
  <Target Name="GenerateSourceLink" BeforeTargets="CoreCompile" Condition="'$(DoSourceLink)'=='true'">
    <Delete Files="$(SourceLink)" Condition="Exists('$(SourceLink)')" />
    <Exec Command="git rev-parse HEAD" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="LatestCommit" />
    </Exec>
    <Exec Command="git rev-parse --show-toplevel" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitRootFolder" />
    </Exec>
    <WriteLinesToFile File="$(SourceLink)" Lines="{&quot;documents&quot;: { &quot;$([System.IO.Path]::GetFullPath('$(GitRootFolder)/').Replace('\','\\'))*&quot; : &quot;$(RepoUri)/$(LatestCommit)/*&quot; }}" />
  </Target>
  <Import Project="..\outputpath.props" />
</Project>